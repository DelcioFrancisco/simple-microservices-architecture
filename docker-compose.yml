#version: "3.9"
services:
  # === Database (Postgres) ===
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # === SonarQube ===
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    restart: always
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/mydb
      SONARQUBE_JDBC_USERNAME: myuser
      SONARQUBE_JDBC_PASSWORD: mypass
    ports:
      - "9000:9000"
    depends_on:
      - postgres

  # === Grafana ===
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

  # === Prometheus ===
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # === Backend principal ===
  backend-main:
    build:
      context: ./backend/main-app
      dockerfile: Dockerfile
    container_name: backend_main
    ports:
      - "8081:8080"

  # === Backend relat√≥rios ===
  backend-report:
    build:
      context: ./backend/report-app
      dockerfile: Dockerfile
    container_name: backend_report
    ports:
      - "8082:8080"

  # === Frontend React ===
  react-app:
    build:
      context: ./frontend/react-app
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "3001:80"

  # === Frontend Angular ===
  angular-app:
    build:
      context: ./frontend/angular-app
      dockerfile: Dockerfile
    container_name: angular_frontend
    ports:
      - "4200:80"

  # === NGINX Reverse Proxy ===
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-main
      - backend-report
      - react-app
      - angular-app
      - sonarqube
      - grafana
      - prometheus

volumes:
  postgres_data:
  grafana_data:
